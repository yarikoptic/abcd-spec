#!/bin/bash

#return code 0 = running
#return code 1 = finished successfully
#return code 2 = failed
#return code 3 = unknown (retry later)

if [ ! -z $BRAINLIFE_LOCAL_VALIDATOR ] && [[ "$SERVICE" = brainlife/validator* ]]; then
        `dirname $0`/../direct/status
        exit $?
fi

if [ ! -f jobid ];then
    echo "no jobid - not yet submitted?"
    exit 3
fi

jobid=`cat jobid`
if [ -z $jobid ]; then
    echo "jobid is empty.. failed to submit?"
    exit 2
fi

if [ -f exit-code ]
then
    code=$(cat exit-code)
    if [ $code -eq 0 ]; then
        echo "finished successfully"
        exit 1
    fi

    #non 0 exit code..
    logname="slurm-$jobid.err"
    if [ -z $logname ]; then
        echo "finished with exit code $code (.err empty)"
    elif [ -f $logname ]; then
    tail -10 $logname | grep -v -e '^$' | tail -1 #skip empty line
    else 
        echo "finished with exit code $code (no .err log)"
    fi
    exit 2
fi

#remove .mcrCache9.2 if job finished
if [ -f exit-code ] && [ -d .mcrCache* ]
then
        echo "removing .mcrCache* directory to reduce inode usage"
        rm -rf .mcrCache*
fi

jobstate=`scontrol show job $jobid | grep JobState | cut -f4 -d' ' | cut -f2 -d'='`
if [ -z $jobstate ]; then
    echo "no job state.. odd"
    exit 2
fi

#TODO .. I need to handle all slurm states such as
#PENDING, RUNNING, SUSPENDED, CANCELLED, COMPLETING, COMPLETED, CONFIGURING, FAILED, TIMEOUT, PREEMPTED, NODE_FAIL, REVOKED and SPECIAL_EXIT

if [ $jobstate == "PENDING" ]; then
        eststart=`timeout 1 squeue -h -o "%S" -j $jobid`
        echo "Waiting in the queue - estimated start time: $eststart"
    exit 0
fi
if [ $jobstate == "RUNNING" ]; then
    logname="slurm-$jobid.log"
    if [ -z $logname ]; then
        echo "(empty log)"
    elif [ -f $logname ]; then
        tail -10 $logname | grep -v -e '^$' | tail -1 #skip empty line

        #if stdout log is empty, try errlog
        if [ ! -s $logname ]; then
            tail -10 "slurm-$jobid.err" | grep -v -e '^$' | tail -1 #skip empty
        fi
    else 
        echo "Running"
    fi
    exit 0
fi

echo $jobstate
if [ $jobstate == "COMPLETING" ]; then
    exit 0
fi
if [ $jobstate == "CONFIGURING" ]; then
    exit 0
fi
if [ $jobstate == "COMPLETING" ]; then
    exit 0
fi
if [ $jobstate == "REQUEUE_HOLD" ]; then
    echo "Requeue Hold"
    exit 0 
fi

if [ $jobstate == "COMPLETED" ]; then
    exit 1
fi

if [ $jobstate == "CANCELLED" ]; then
    exit 2
fi
if [ $jobstate == "NODE_FAIL" ]; then
    exit 2
fi
if [ $jobstate == "TIMEOUT" ]; then
    exit 2
fi
if [ $jobstate == "FAILED" ]; then
    echo "Job failed"
    exit 2
fi
echo "unknown state: $jobstate"
exit 3
