#!/bin/bash

#return code 0 = running
#return code 1 = finished successfully
#return code 2 = failed
#return code 3 = unknown (retry later)

function check_exit() 
{
    if [ -f exit-code ]
    then
        code=$(cat exit-code)
        if [ $code -eq 0 ]
        then 
            logfile=$(ls -rt *.log | tail -1)
	    tail -10 $logfile | grep -v -e '^$' | tail -1
            exit 1 #finished!
        fi

        #echo "finished with exit code $code"
        logfile=$(ls -rt *.log | tail -1)
	tail -10 $logfile | grep -v -e '^$' | tail -1
        exit 2 #failed!
    fi
}
check_exit

if [ -f pid ]
then
    if ps -p $(cat pid) > /dev/null
    then
        #get last line of last log touched
        logfile=$(ls -rt *.log | tail -1)
	tail -10 $logfile | grep -v -e '^$' | tail -1
        exit 0 #running
    else
        #it could be in the middle of writing out exit-code.. let's wait and check again
        sleep 5
        check_exit 

        echo "no longer running but didn't finish"
        exit 2 #failed
    fi
fi

echo "not yet started?"
exit 3 #unknown
